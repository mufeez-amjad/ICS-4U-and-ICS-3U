import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.WindowConstants;

public class DistributionCenter extends JPanel {
	private final static int frameHeight = 640;
	private final static int frameWidth =  1020;
	private static Parcel[] parcels;
	private static Conveyor conveyor = new Conveyor();
	Scanner scanner = new Scanner();
	public DistributionCenter(int n){
		parcels = new Parcel[n];
		for (int i = 0; i < n; i++){
			parcels[i] = new Parcel();
		}
	}
	public static int getFrameHeight(){
		return frameHeight;
	}
	
	public static int getFrameWidth() {
		return frameWidth;
	}
	
	public void paint(Graphics g){
		g.setColor(Color.white);
		g.fillRect(0, 0, frameWidth, frameHeight);
		conveyor.paint(g);
		
		for (int i = 0; i < parcels.length; i++){
			parcels[i].paint(g);
		}
		
		scanner.paint(g); 
		
	}
	
	public void move(){
		for (int i = 0; i < parcels.length; i++){
			parcels[i].update(scanner);
		}
		
		conveyor.update(parcels);
	}
	
	public static void main(String[] args) throws InterruptedException {
		JFrame frame = new  JFrame();
		DistributionCenter panel = new DistributionCenter(20);
		panel.addKeyListener(new KeyListener() {

			@Override
			public void keyTyped(KeyEvent e) {}

			@Override
			public void keyReleased(KeyEvent e) {
				if (e.getKeyCode() == KeyEvent.VK_SPACE){
					conveyor.startStop();
					for (int i = 0; i < parcels.length; i++){
						parcels[i].stopStart(conveyor);
					}
				}
			}

			@Override
			public void keyPressed(KeyEvent e) {
				
			}
		});
		
		frame.add(panel);	
		panel.setFocusable(true);
		panel.requestFocusInWindow();
		frame.setSize(frameWidth, frameHeight);
		frame.setVisible(true);
		frame.setTitle("Canada Post");
		frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE); 
		//frame.setResizable(false); 
		frame.setLocationRelativeTo(null); //centers the window
		
		while (true){
			panel.move();
			panel.repaint();
			Thread.sleep(7);
		}
	}
	

}
